{% extends 'new_layout.twig' %}

{% block style %}
<link href="vendor/fontawesome/css/all.min.css" rel="stylesheet">
<link rel="stylesheet" href="public/bootstrap/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="public/datatable/datatables.min.css">
<link rel="stylesheet" href="public/bootstrap/css/bootstrap-select.min.css">
<link rel="stylesheet" type="text/css" href="public/datatable/datatables.min.css">
<link rel="stylesheet" href="public/css/dashboard.css">
<link rel="stylesheet" href="public/css/forms-myrecode.css">
<link rel="stylesheet" href="public/css/cards-myrecode.css">
<link rel="stylesheet" href="public/css/font-family.css">
<style type="text/css">
    .past_purple {
        background-color: #A7BFE3;
        float: left;
        padding: 3px 5px 3px 5px;
        border-radius: 5px;
    }

    .past_pink {
        background-color: #F9D7E7;
        float: left;
        padding: 3px 5px 3px 5px;
        border-radius: 5px;
    }

    .past_greeen {
        background-color: #CBE5BE;
        float: left;
        padding: 3px 5px 3px 5px;
        border-radius: 5px;
    }
    .past_yellow {
        background-color: #FFF681;
        float: left;
        padding: 3px 5px 3px 5px;
        border-radius: 5px;
    }
    .past_blue {
        background-color: #90A4C3;
        float: left;
        padding: 3px 5px 3px 5px;
        border-radius: 5px;
    }
    .past_pastel {
        background-color: #FBDEDA;
        float: left;
        padding: 3px 5px 3px 5px;
        border-radius: 5px;
    }
    .past_orange {
        background-color: #F1CB9D;
        float: left;
        padding: 3px 5px 3px 5px;
        border-radius: 5px;
    }
    .past_red {
        background-color: #2D2B76;
        float: left;
        color: antiquewhite;
        padding: 3px 5px 3px 5px;
        border-radius: 5px;
    }
    .text-calm{
        font-family: 'Times New Roman', Times, serif !important;
        font-weight: 300 !important;
        box-shadow: none !important;
    }
    .link-reco{
        text-decoration: none;
        color: black;
    }
    #mbmax{
        margin-bottom: 150px !important;
    }
    #client_row{
        width: 170px;
    }
</style>
{% endblock %}
{% block main %}
<main role="main" class="container-fluid my-3 col-11 container-body" >
    <h3 class="recode-p"><i class="fad fa-building"></i></i> Administration Publicités MyRecode</h3>
    <div class="d-flex justify-content-start mt-4"  id="sticky-test">
        <div class="col-11 card-recode-admin ">
            <h4 class="recode-p"><i class="fas fa-users"></i> Liste</h4>
         
            <table id="table_id" class="display mt-3">
                <div class="my-2 float-right">
                    <button class="btn btn-recode-important" data-toggle="modal" data-target="#modalAjout">Ajouter</button>
                </div>
                <thead>
                    <tr >
                        <th></th>
                        <th>Titre</th>
                        <th>Lien</th>
                        <th>Texte</th>
                        <th id="client_row">Client</th>
                        <th>Image</th>
                        
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    {% for add in list %}
                      
                        <tr>
                            <td>{{add|json_encode()}}</td>
                            <td>
                                <b>{{ add.ad__titre }}</b>
                            </td>
                            <td>
                                <a href="{{ add.ad__lien }}" class=""> {{ add.ad__lien }}</a><br>
                                
                            </td>
                            <td>
                                {{ add.ad__txt }}
                            </td>
                            <td>
                                {% for entry in add.relation %}
                                <a href="displaySocieteMyRecode?cli__id={{entry.cli__id}}" class=""> {{  " ("~  entry.cli__id ~ ") " ~ entry.cli__nom }}</a><br>
                                {% endfor %}
                            </td>
                            <td>
                                <img src="{{add.img}}"  width="30"> 
                                
                            </td>
                            <td>
                                <button data-toggle="modal" data-target="#modalEdit"  class="btn btn-recode-small editButton">Modifier</button>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
</main>

<div class="modal fade" id="modalAjout" tabindex="-1" role="dialog" aria-labelledby="modalmatosAjout"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            
            <div class="modal-header">
                <div>
                    <h5 class="modal-title">Ajouter une publicité</h5>
                  
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form action="add-myrecode" id="postAdd" method="post" enctype="multipart/form-data" >
                <div class="modal-body">
                    <div class="col-11 d-flex justify-content-start">
                        <div class="col-6">
                            <small class="form-text text-muted"> Titre</small>
                            <input class="form-control my-2 input-recode" name="add__titre" id="add__titre"  rows="2" ></input>
                        </div>
                        <div class="col-6">
                            <small class="form-text text-muted"> Lien</small>
                            <input class="form-control my-2 input-recode" name="add__lien" id="add__lien"  rows="2" ></input>
                        </div>
                    </div>
                    <div class="col-11 d-flex justify-content-start">
                        <div class="col-12">
                            <small class="form-text text-muted"> Texte</small>
                            <input class="form-control my-2 input-recode" name="add__txt" id="add__txt"  rows="2" ></input>
                        </div>
                        
                    </div>
                    <div class="col-11 d-flex justify-content-start">
                        <div class="col-12">
                            <small class="form-text text-muted"> Clients</small>
                            <select class="form-control my-2 form-control input-recode selectpicker text-calm text-muted" multiple data-live-search="true" id="add__client">
                                {% for clientTT in list_client %}
                                
                                    <option value="{{clientTT.cli__id}}">{{ " ( " ~ clientTT.cli__id ~ " ) " ~ clientTT.cli__nom}}</option>
                            {% endfor %}
                            </select> 
                    </div>
                </div>
                    <div class="col-11 mb-3 d-flex justify-content-start">
                        <div class="col-12">
                            <small class="form-text text-muted"> Image.PNG (280x280)</small>
                            <input class="form-control" name="add__img" type="file" id="add__img">
                    </div>
                   </div>
                
                <div class="modal-footer">
                    <div class="spinner-border d-none" id="postLoader" role="status">
                        <span class="visually-hidden"></span>
                      </div>
                    <button class="btn btn-recode-important"  id="postAjout" type="button">Ajouter</button>
                </div>
            </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="modalEdit" tabindex="-1" role="dialog" 
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            
            <div class="modal-header">
                <div>
                    <h5 class="modal-title">Modifier une publicité</h5>
                  
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form action="" id="postAddEdit" method="post" enctype="multipart/form-data" >
                <div class="modal-body">
                    <div class="col-11 d-flex justify-content-start">
                        <div class="col-6">
                            <small class="form-text text-muted"> Titre</small>
                            <input type="hidden" name="add__idEdit" id="add__idEdit">
                            <input class="form-control my-2 input-recode" name="add__titreEdit" id="add__titreEdit" readonly  rows="2" ></input>
                        </div>
                        <div class="col-6">
                            <small class="form-text text-muted"> Lien</small>
                            <input class="form-control my-2 input-recode" name="add__lienEdit" id="add__lienEdit"  rows="2" ></input>
                        </div>
                    </div>
                    <div class="col-11 d-flex justify-content-start">
                        <div class="col-12">
                            <small class="form-text text-muted"> Texte</small>
                            <input class="form-control my-2 input-recode" name="add__txtEdit" id="add__txtEdit"  rows="2" ></input>
                        </div>
                        
                    </div>
                    <div class="col-11 d-flex justify-content-start">
                        <div class="col-12">
                            <small class="form-text text-muted"> Clients</small>
                            <select class="form-control my-2 form-control input-recode selectpicker text-calm text-muted" multiple data-live-search="true" id="add__clientEdit">
                                {% for clientTT in list_client %}
                                
                                    <option value="{{clientTT.cli__id}}">{{ " ( " ~ clientTT.cli__id ~ " ) " ~ clientTT.cli__nom}}</option>
                            {% endfor %}
                            </select> 
                    </div>
                </div>
                    <div class="col-11 mb-3 d-flex justify-content-start">
                        <div class="col-8">
                            <small class="form-text text-muted"> Image.PNG(280x280)</small>
                            <input class="form-control" name="add__imgEdit" type="file" id="add__imgEdit">
                        </div>
                        
                   </div>
                
                
                <div class="modal-footer">
                    <div class="spinner-border d-none" id="postLoaderEdit" role="status">
                        <span class="visually-hidden"></span>
                      </div>
                    <button class="btn btn-recode-important"  id="postAjoutEdit" type="button">Modifier</button>
                </div>

                </div>
            </form>
        </div>
    </div>
</div>
{% endblock %}
{% block script %}
<script type="text/javascript" src="public/datatable/datatables.min.js"></script>
<script type="text/javascript" src="public/bootstrap/js/bootstrap.bundle.min.js"></script>
<script type="text/javascript" src="public/bootstrap/js/bootstrap-select.min.js"></script>
<script type="text/javascript">
    $(document).ready(function(){

        const prod = "http://192.168.1.105/api" ; 
        //const prod = "http://localhost/RESTapi/"; 

        var userTable =  $('#table_id').DataTable({
            paging: true,
            lengthMenu: [50],
            bLengthChange : false ,
            paging: true,             
            bPaginate: false,  
            columns: [
                { "visible": false } ,
                null,
                null,
                null,
                null,
                null, 
                null
                
            ],
            createdRow: function (row, data, index) {
              
                $(row).on('click' , function(){

                    if (isJSONValid(data[0])){
                        data = JSON.parse(data[0]);
                    }else {
                        data = data ;
                    }
                   
                    $('#add__titreEdit').val(data.ad__titre)
                    $('#add__lienEdit').val(data.ad__lien)
                    $('#add__txtEdit').val(data.ad__txt)
                    $('#add__idEdit').val(data.ad__id)
                    $('#add__clientEdit').selectpicker('deselectAll')
                    array_temp = [];
                    for($i=0; $i< data.relation.length; $i ++ ){
                        array_temp.push(data.relation[$i].cli__id)
                    }
                    $('#add__clientEdit').selectpicker('val', array_temp);
                    $('#add__clientEdit').selectpicker('refresh');
                })
               
              
            },

        
            language: {
                lengthMenu: "",
                zeroRecords: "Aucuns résultats",
                info: "",
                infoEmpty: "Aucuns résultats",
                infoFiltered: " ",
                search: "Rechercher"
            }
        });


        function isJSONValid(str) {
            try {
              JSON.parse(str);
              return true;
            } catch (e) {
               
              return false;
            }
          }


        $('#postAjout').on('click',function(){
            
            let valid_titre = validateTitre();
            if(valid_titre === 42 ){
                let valid_lien = validateLien();
                if(valid_lien === 42 ){
                    let valid_text = validateText();
                    if(valid_text === 42){
                        validateImage42()
                        .then(function(resultat) {
                            $('#postLoader').removeClass('d-none');
                            $('#postAjout').attr("disabled", true);
                            let body = renderBody();
                            postAddAsync(body).then(function(){

                            $('#postAdd').submit();
            
                            }).catch(function(error){
                                console.log(error);
                            })
                        })
                        .catch(function(erreur) {
                           
                        });
                       
                    }
                }
            }
        })


        $('#postAjoutEdit').on('click',function(){
            
           
            let valid_titre = validateTitreEdit();
            if(valid_titre === 42 ){
                
                let valid_lien = validateLienEdit();
                if(valid_lien === 42 ){
                    
                    let valid_text = validateTextEdit();
                    if(valid_text === 42){
                        
                        let valid_image = validateImageEdit();
                        console.log(valid_image);
                        if(valid_image === 42 ){
                            $('#postLoaderEdit').removeClass('d-none');
                            $('#postAjoutEdit').attr("disabled", true);
                            let body = renderBodyEdit();
                          
                            postAddAsync( body).then(function(){

                            $('#postAddEdit').submit();
            
                            }).catch(function(error){
                                console.log(error);
                            })
                            //relations ::
                        }
                    }
                }
            }
        })



        function validateTitre() {
            var input = document.getElementById("add__titre");
            var value = input.value.trim(); // Supprimer les espaces avant et après le texte
        
            if (value.length < 3) {
              // Le texte est trop court
              alert("Le titre doit avoir au moins 3 caractères.");

            } else if (value.length > 35) {
              // Le texte est trop long
              alert("Le titre ne peut pas dépasser 35 caractères.");
            } else {
                return 42 ;
            }
        }


        function validateTitreEdit() {
            var input = document.getElementById("add__titreEdit");
            var value = input.value.trim(); // Supprimer les espaces avant et après le texte
        
            if (value.length < 3) {
              // Le texte est trop court
              alert("Le titre doit avoir au moins 3 caractères.");

            } else if (value.length > 35) {
              // Le texte est trop long
              alert("Le titre ne peut pas dépasser 35 caractères.");
            } else {
                return 42 ;
            }
        }


        function validateLien() {
            var input = document.getElementById("add__lien");
            var value = input.value.trim(); // Supprimer les espaces avant et après le texte
        
            if (value.length < 10) {
              // Le texte est trop court
              alert("Le lien doit avoir au moins 10 caractères.");
            } else if (value.length > 150) {
              // Le texte est trop long
              alert("Le lien ne peut pas dépasser 70 caractères.");
            } else {
              // La longueur du texte est valide
              return 42 ;
            }
          }


          function validateLienEdit() {
            var input = document.getElementById("add__lienEdit");
            var value = input.value.trim(); // Supprimer les espaces avant et après le texte
        
            if (value.length < 10) {
              // Le texte est trop court
              alert("Le lien doit avoir au moins 10 caractères.");
            } else if (value.length > 150) {
              // Le texte est trop long
              alert("Le lien ne peut pas dépasser 70 caractères.");
            } else {
              // La longueur du texte est valide
              return 42 ;
            }
          }


          function validateText() {
            var input = document.getElementById("add__txt");
            var value = input.value.trim(); // Supprimer les espaces avant et après le texte
        
            if (value.length < 5) {
              // Le texte est trop court
              alert("Le texte doit avoir au moins 5 caractères.");
            } else if (value.length > 250) {
              // Le texte est trop long
              alert("Le texte ne peut pas dépasser 250 caractères.");
            } else {
              // La longueur du texte est valide
              return 42 ;
            }
          }


          function validateTextEdit() {
            var input = document.getElementById("add__txtEdit");
            var value = input.value.trim(); // Supprimer les espaces avant et après le texte
        
            if (value.length < 5) {
              // Le texte est trop court
              alert("Le texte doit avoir au moins 5 caractères.");
            } else if (value.length > 250) {
              // Le texte est trop long
              alert("Le texte ne peut pas dépasser 250 caractères.");
            } else {
              // La longueur du texte est valide
              return 42 ;
            }
          }


          function validateImage() {
            var input = document.getElementById("add__img");
            var file = input.files[0];
          
            // Vérifier si un fichier a été sélectionné
            if (!file) {
              alert("Veuillez sélectionner une image.");
              return;
            }
          
            // Vérifier le type de fichier (PNG)
            if (file.type !== "image/png") {
              alert("Le fichier doit être au format PNG.");
              input.value = ""; // Effacer le champ de saisie
              return;
            }
          
            // Créer un objet Image
            var img = new Image();
            // Charger le fichier image en utilisant URL.createObjectURL AVANT le contrôle des dimensions
            img.src = URL.createObjectURL(file);
          
            let test = null ;
            img.onload = function() {
              if (img.width === 280 && img.height === 280) {
                return 42 
              }else {
                alert("L'image doit faire exactement 280x280 pixels.");
                input.value = ""; 
                return;
              }
            };
            
            
          }


          function validateImage42() {
            return new Promise(function(resolve, reject) {
              var input = document.getElementById("add__img");
              var file = input.files[0];
          
              // Vérifier si un fichier a été sélectionné
              if (!file) {
                alert("Veuillez sélectionner une image.");
                reject("Veuillez sélectionner une image.");
                return;
              }
          
              // Vérifier le type de fichier (PNG)
              if (file.type !== "image/png") {
                alert("Le fichier doit être au format PNG.");
                input.value = ""; // Effacer le champ de saisie
                reject("Le fichier doit être au format PNG.");
                return;
              }
          
              // Créer un objet Image
              var img = new Image();
          
              // Charger le fichier image en utilisant URL.createObjectURL AVANT le contrôle des dimensions
              img.src = URL.createObjectURL(file);
          
              img.onload = function() {
                if (img.width === 280 && img.height === 280) {
                  resolve(42); // Résolvez la promesse avec la valeur 42
                } else {
                  alert("L'image doit faire exactement 280x280 pixels.");
                  input.value = "";
                  reject("L'image doit faire exactement 280x280 pixels.");
                }
              };
            });
          }
          



          function validateImageEdit() {
            var input = document.getElementById("add__imgEdit");
            var file = input.files[0];

            if (file) {
              // Vérifier le type de fichier (PNG)
                    if (file.type !== "image/png") {
                        alert("Le fichier doit être au format PNG.");
                        input.value = ""; // Effacer le champ de saisie
                        return;
                    }
                    
                    // Créer un objet Image
                    var img = new Image();
                    
                    // Charger le fichier image en utilisant URL.createObjectURL AVANT le contrôle des dimensions
                    img.src = URL.createObjectURL(file);
                    
                    img.onload = function() {
                        if (img.width === 280 && img.height === 280) {
                        
                        
                        } else {

                        alert("L'image doit faire exactement 280x280 pixels.");
                        input.value = ""; // Effacer le champ de saisie
                        return ;
                        }
                    };
                    return 42;
              } else return 42
          }
          

          let renderBody = function(){
            
            let body = {
                'secret' : 'heAzqxwcrTTTuyzegva^5646478§§uifzi77..!yegezytaa9143ww98314528', 
                'ad__titre' : $('#add__titre').val(),
                'ad__lien' : $('#add__lien').val() , 
                'ad__txt' : $('#add__txt').val() , 
                'ad__img' : 'test.png' , 
                'relation' : $('#add__client').val()
            };

            return body;
           
        }


        let renderBodyEdit = function(){
            
            let body = {
                'secret' : 'heAzqxwcrTTTuyzegva^5646478§§uifzi77..!yegezytaa9143ww98314528', 
                '__PUT' : 'yes',
                'ad__titre' : $('#add__titreEdit').val(),
                'ad__lien' : $('#add__lienEdit').val() , 
                'ad__txt' : $('#add__txtEdit').val() , 
                'ad__id' : $('#add__idEdit').val(),
                'ad__img' : 'test.png' , 
                'relation' : $('#add__clientEdit').val()
            };

            return body;
           
        }

        let postAddAsync = function (body) {
            return new Promise((resolve, reject) => {
                $.ajax(prod + '/add', {
                    type: 'POST',
                    method: 'POST',
                    crossDomain: true,
                    data: JSON.stringify(body),
                    success: function (data, status, xhttp) {
                        resolve(data.data);
                        console.log(data);
                    },
                    error: function (jqXhr, textStatus, errorMessage) {
                        reject(jqXhr.responseJSON.msg);
                    }
                });
            });
        };
    });
    </script>

{% endblock %}